version: '3.8'

services:
  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - REACT_APP_API_URL=https://${DOMAIN_NAME}/api
    depends_on:
      - api

  api:
    build: ./backend
    volumes:
      - ./backend:/app
    environment:
      - DB_HOST=db
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_NAME=${POSTGRES_DB}
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - db
      - redis

  mailserver:
    build: ./mailserver
    ports:
      - "${SMTP_PORT}:587"
      - "${IMAP_PORT}:993"
      - "${POP3_PORT}:995"
      - "25:25"
    volumes:
      - ./data/mail:/var/mail
      - ./mailserver/config/postfix:/etc/postfix
      - ./mailserver/config/dovecot:/etc/dovecot
      - ./mailserver/config/opendkim:/etc/opendkim
      - certbot_data:/etc/letsencrypt
    environment:
      - MAILSERVER_HOSTNAME=${MAILSERVER_HOSTNAME}
      - DOMAIN_NAME=${DOMAIN_NAME}
      - ENABLE_SPAM_PROTECTION=${ENABLE_SPAM_PROTECTION}
      - ENABLE_VIRUS_PROTECTION=${ENABLE_VIRUS_PROTECTION}
      - ENABLE_DKIM=${ENABLE_DKIM}
    depends_on:
      - db

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - certbot_data:/etc/letsencrypt
      - certbot_www:/var/www/certbot
    depends_on:
      - frontend
      - api

  certbot:
    image: certbot/certbot
    volumes:
      - certbot_data:/etc/letsencrypt
      - certbot_www:/var/www/certbot
    command: certonly --webroot --webroot-path=/var/www/certbot --email ${ADMIN_EMAIL} -d ${DOMAIN_NAME} --agree-tos --no-eff-email
    depends_on:
      - nginx

  db:
    image: postgres:13-alpine
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}

  redis:
    image: redis:alpine
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - ./data/redis:/data

volumes:
  certbot_data:
  certbot_www:

networks:
  default:
    name: mailserver_network 